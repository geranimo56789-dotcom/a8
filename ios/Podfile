# Flutter Podfile
# Generated by CI setup to ensure CocoaPods resolves correctly.

platform :ios, '13.0'

# CocoaPods analytics sends network stats.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Build pods as frameworks instead of static libraries to avoid
# Swift static-library integration issues with non-modular dependencies.
use_frameworks!

# Locate Flutter SDK root from Generated.xcconfig, then load Flutter's podhelper.
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "Generated.xcconfig must exist. If you're running pod install manually, make sure flutter_ios_podfile_setup runs first"
  end
  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT=(.*)/)
    return matches[1].strip if matches
  end
  raise "Could not find FLUTTER_ROOT. Check Generated.xcconfig."
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# If you use use_frameworks!/use_modular_headers!, add here if needed, but Flutter defaults are fine for most apps.

install! 'cocoapods', :deterministic_uuids => false

flutter_ios_podfile_setup

target 'Runner' do
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    # Ensure iOS 13.0 minimum across all pods to satisfy plugin constraints.
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
    end
    # Apply Flutter post_install settings per target (Swift concurrency, etc.).
    flutter_additional_ios_build_settings(target)

  end
end
